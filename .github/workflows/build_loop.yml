name: 4. Build Loop
run-name: Build Loop ${{ github.ref_name }}
on:
  workflow_dispatch:
  
  ## Remove the "#" sign from the beginning of the line below to get automated builds on push (code changes in your repository)
  #push:

  ## Remove the "#" sign from the beginning of the two lines below to get automated builds every two months
  #schedule:
    #- cron: '0 17 1 */2 *' # Runs at 17:00 UTC on the 1st in Jan, Mar, May, Jul, Sep and Nov.

jobs:
  secrets:
    uses: ./.github/workflows/validate_secrets.yml
    secrets: inherit
    
  build:
    needs: secrets
    runs-on: macos-12
    steps:
      # Uncomment to manually select latest Xcode if needed
      - name: Select Latest Xcode
        run: "sudo xcode-select --switch /Applications/Xcode_14.1.app/Contents/Developer"

      # Checks-out the repo
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      # Customize Loop: Download and apply patches
      - name: Customize Loop
        run: |

          # For each patch, edit comment line (keep the #) then update curl (and remove the #)

          # Submodule Loop patches:
          # LoopKit: Environment+Authenticate.swift: Disable Authentication
          curl https://github.com/WRSTEMPLE/LoopKit/commit/e5f79eaa6420f2fe37504da1b2cc9b8726308b79.patch | git apply -v --directory=LoopKit
         
          # LoopKit: Guardrail+Settings.swift: ISF Extended
          curl https://github.com/WRSTEMPLE/LoopKit/commit/f452d052be92a95b9d9961acdbd01b4a6294f1f9.patch | git apply -v --directory=LoopKit
         
          # LoopKit: Guardrail+Settings.swift: Correction Range 
          curl https://github.com/WRSTEMPLE/LoopKit/commit/f4a2aef8aa226aa4ee4e7a39f4dfc040f2b1d0f5.patch | git apply -v --directory=LoopKit
         
          # Submodule LoopKit patches:
          # LoopKit: Filename: customization details
          #curl https://github.com/username/LoopKit/commit/SHA-1.patch | git apply -v --directory=LoopKit

          # Submodule xxxxx patches: Follow prototype above

      # Patch Fastlane Match to not print tables
      - name: Patch Match Tables
        run: find /usr/local/lib/ruby/gems -name table_printer.rb | xargs sed -i "" "/puts(Terminal::Table.new(params))/d"
      
      # Build signed Loop IPA file
      - name: Fastlane Build & Archive
        run: fastlane build_loop
        env:
          TEAMID: ${{ secrets.TEAMID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      
      # Upload to TestFlight
      - name: Fastlane upload to TestFlight
        run: fastlane release
        env:
          TEAMID: ${{ secrets.TEAMID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      # Upload IPA and Symbols
      - name: Upload IPA and Symbol artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            artifacts
            buildlog
